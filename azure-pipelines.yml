# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  dockerHubImageName: 'sujayabu/myhelloworldimage'  # Replace with your Docker Hub image name
  dockerHubUsername: 'sujayabu'                     # Replace with your Docker Hub username
  dockerHubPassword: ''                             # Set in Azure DevOps as a secret variable

steps:
# Step 1: Checkout the code
- task: UseDotNet@2
  displayName: 'Install .NET SDK'
  inputs:
    packageType: 'sdk'
    version: '6.x'  # Use the appropriate .NET version

# Step 2: Restore dependencies
- script: |
    dotnet restore
  displayName: 'Restore dependencies'

# Step 3: Build the .NET application
- script: |
    dotnet build --configuration Release
  displayName: 'Build application'

# Step 4: Publish the build output
- script: |
    dotnet publish -c Release -o $(Build.ArtifactStagingDirectory)/publish
  displayName: 'Publish application'

# Step 5: Get the next version tag
- script: |
    docker login -u $(dockerHubUsername) -p $(dockerHubPassword)
    current_version=$(docker images $(dockerHubImageName) --format "{{.Tag}}" | grep -E "^v[0-9]+" | sort -r | head -n 1 | sed 's/v//')
    next_version=$((current_version + 1))
    echo "##vso[task.setvariable variable=nextVersion;]v$next_version"
  displayName: 'Determine next version tag'

# Step 6: Build Docker image with next version
- task: Docker@2
  displayName: 'Build Docker image'
  inputs:
    command: 'build'
    repository: '$(dockerHubImageName)'
    Dockerfile: 'Dockerfile'  # Ensure you have a Dockerfile in the repo root
    tags: |
      $(nextVersion)

# Step 7: Push Docker image with next version
- task: Docker@2
  displayName: 'Push Docker image'
  inputs:
    command: 'push'
    repository: '$(dockerHubImageName)'
    tags: |
      $(nextVersion)